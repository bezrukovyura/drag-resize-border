{"version":3,"sources":["index.ts"],"names":[],"mappings":";AAkEA,aAAA,QAAA,YAAA,EAlEA,IAAA,EAAA,WAEE,SAAA,EAAoB,EAA8B,GAAlD,IAAA,EAAA,KAAoB,KAAA,aAAA,EAA8B,KAAA,gBAAA,EAIlD,KAAA,MAAwB,SAAS,cAAc,KAAK,cAGpD,KAAA,SAAW,SAAA,GACL,IAAA,EAAK,EAAK,MAAQ,EAAE,EACxB,EAAK,MAAQ,EAAE,EACf,EAAK,MAAM,MAAM,MAAS,SAAS,iBAAiB,EAAK,MAAO,IAAI,OAAS,EAAM,MAGrF,KAAA,WAAa,WACX,EAAK,MAAM,MAAM,OAAS,WAC1B,EAAK,kBAAkB,SAAS,cAAc,QAAS,aAAc,SAGvE,KAAA,YAAc,WACZ,EAAK,MAAM,MAAM,OAAS,UAC1B,EAAK,kBAAkB,SAAS,cAAc,QAAS,aAAc,KAGvE,KAAA,WAAa,SAAC,GAEL,OADM,EAAE,MAAyB,EAAE,cAAe,YAA+B,EAAE,cAAe,wBAAwB,KAAO,EAAK,iBAvBxI,KAAA,eAyDT,OA9BE,EAAA,UAAA,aAAA,WAAA,IAAA,EAAA,KAEO,KAAA,MAAM,iBAAiB,YAAa,SAAA,GAClC,EAAK,WAAW,KAErB,EAAK,MAAQ,EAAE,EACf,EAAK,MAAM,UAAU,IAAI,mBACzB,SAAS,iBAAiB,YAAa,EAAK,UAAU,MACrD,GAEH,SAAS,iBAAiB,UAAW,WACnC,SAAS,oBAAoB,YAAa,EAAK,UAAU,KACxD,GAEE,KAAA,MAAM,iBAAiB,YAAa,SAAA,GACnC,EAAK,WAAW,GAClB,EAAK,aAEL,EAAK,gBACN,GACE,KAAA,MAAM,iBAAiB,WAAY,SAAA,GAAO,EAAK,gBAAiB,IAGvE,EAAA,UAAA,kBAAA,SAAkB,EAAsB,EAAkB,GACxD,EAAQ,MAAM,UAAY,EAAS,GAAG,cAAgB,EAAS,MAAM,KAAO,EAC5E,EAAQ,MAAM,OAAS,EAAS,GAAG,cAAgB,EAAS,MAAM,KAAO,EACzE,EAAQ,MAAM,MAAQ,EAAS,GAAG,cAAgB,EAAS,MAAM,KAAO,EACxE,EAAQ,MAAM,GAAY,GAG9B,EA5DA,GAAa,QAAA,iBAAA,EA8DP,OAAQ,iBAAmB","file":"index.map","sourceRoot":"..\\src","sourcesContent":["export class dragResizeBorder {\r\n\r\n  constructor(private selectorName: string, private sensitivityZone: number) {\r\n    this.addListeners();\r\n  }\r\n\r\n  panel: HTMLDivElement = document.querySelector(this.selectorName);\r\n  m_pos: number;\r\n\r\n  onResize = e => {\r\n    let dx = this.m_pos - e.x;\r\n    this.m_pos = e.x;\r\n    this.panel.style.width = (parseInt(getComputedStyle(this.panel, '').width) - dx) + \"px\";\r\n  }\r\n\r\n  onResizeOn = () => {\r\n    this.panel.style.cursor = \"w-resize\";\r\n    this.setVendorProperty(document.querySelector(\"body\"), \"userSelect\", \"none\");\r\n  }\r\n\r\n  onResizeOff = () => {\r\n    this.panel.style.cursor = \"default\";\r\n    this.setVendorProperty(document.querySelector(\"body\"), \"userSelect\", \"\");\r\n  }\r\n\r\n  isDragArea = (e: MouseEvent): boolean => {\r\n    let inZone = e.pageX > (<HTMLDivElement>e.currentTarget).offsetWidth + (<HTMLDivElement>e.currentTarget).getBoundingClientRect().left - this.sensitivityZone;\r\n    return inZone;\r\n  }\r\n\r\n  addListeners() {\r\n\r\n    this.panel.addEventListener(\"mousedown\", e => {\r\n      if (!this.isDragArea(e))\r\n        return\r\n      this.m_pos = e.x;\r\n      this.panel.classList.add(\"afterHandResize\");\r\n      document.addEventListener(\"mousemove\", this.onResize, true);\r\n    }, true);\r\n\r\n    document.addEventListener(\"mouseup\", () => {\r\n      document.removeEventListener(\"mousemove\", this.onResize, true);\r\n    }, true);\r\n\r\n    this.panel.addEventListener(\"mousemove\", e => {\r\n      if (this.isDragArea(e))\r\n        this.onResizeOn();\r\n      else\r\n        this.onResizeOff();\r\n    }, false);\r\n    this.panel.addEventListener(\"mouseout\", e => { this.onResizeOff() }, false);\r\n  }\r\n\r\n  setVendorProperty(element: HTMLElement, property: string, value: string) {\r\n    element.style[\"webkit\" + (property[0].toUpperCase() + property.slice(1))] = value;\r\n    element.style[\"Moz\" + (property[0].toUpperCase() + property.slice(1))] = value;\r\n    element.style[\"ms\" + (property[0].toUpperCase() + property.slice(1))] = value;\r\n    element.style[property] = value;\r\n  }\r\n    \r\n}\r\n\r\n(<any>window).dragResizeBorder = dragResizeBorder;\r\n//export enum DirectionResize {\r\n//  //left = \"left\",\r\n//  right = \"right\"\r\n//}\r\n\r\n"]}